// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.40'

    ext {
        buildToolsVersion = "29.0.3"
        minSdkVersion = 21
        compileSdkVersion = 29
        targetSdkVersion = 29
        supportLibVersion = "29.0.0"
        googlePlayServicesVersion = '17.0.0'
        googlePlayServicesVisionVersion = "18.0.0"
    }

    repositories {
        google()
        maven {
            url 'https://maven.google.com/'
        }
        jcenter()
//        maven {
//            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
//        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.1'
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.1.0'
        classpath 'com.google.gms:google-services:4.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //classpath "io.realm:realm-gradle-plugin:6.0.2"
        classpath "io.realm:realm-gradle-plugin:10.0.1"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven {
            url 'https://maven.google.com/'
        }
        jcenter()
        maven { url 'https://jitpack.io' }
//        maven {
//            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
//        }
    }
}


//task wrapper(type: Wrapper) {
//    gradleVersion = '4.7'
//    distributionUrl = distributionUrl.replace("bin", "all")
//}

subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex')) {
                details.useVersion "27.1.1"
            }
        }
    }
}
